var N = null;var searchIndex = {};
searchIndex["mio_aio"]={"doc":"MIO bindings for POSIX AIO","items":[[4,"AioFsyncMode","mio_aio","Mode for `AioCb::fsync`.  Controls whether only data or both data and metadata are synced.",N,N],[13,"O_SYNC","","do it like `fsync`",0,N],[4,"LioOpcode","","When used with `lio_listio`, determines whether a given `aiocb` should be used for a read operation, a write operation, or ignored.  Has no effect for any other aio functions.",N,N],[13,"LIO_NOP","","",1,N],[13,"LIO_WRITE","","",1,N],[13,"LIO_READ","","",1,N],[4,"Errno","","",N,N],[13,"UnknownErrno","","",2,N],[13,"EPERM","","",2,N],[13,"ENOENT","","",2,N],[13,"ESRCH","","",2,N],[13,"EINTR","","",2,N],[13,"EIO","","",2,N],[13,"ENXIO","","",2,N],[13,"E2BIG","","",2,N],[13,"ENOEXEC","","",2,N],[13,"EBADF","","",2,N],[13,"ECHILD","","",2,N],[13,"EDEADLK","","",2,N],[13,"ENOMEM","","",2,N],[13,"EACCES","","",2,N],[13,"EFAULT","","",2,N],[13,"ENOTBLK","","",2,N],[13,"EBUSY","","",2,N],[13,"EEXIST","","",2,N],[13,"EXDEV","","",2,N],[13,"ENODEV","","",2,N],[13,"ENOTDIR","","",2,N],[13,"EISDIR","","",2,N],[13,"EINVAL","","",2,N],[13,"ENFILE","","",2,N],[13,"EMFILE","","",2,N],[13,"ENOTTY","","",2,N],[13,"ETXTBSY","","",2,N],[13,"EFBIG","","",2,N],[13,"ENOSPC","","",2,N],[13,"ESPIPE","","",2,N],[13,"EROFS","","",2,N],[13,"EMLINK","","",2,N],[13,"EPIPE","","",2,N],[13,"EDOM","","",2,N],[13,"ERANGE","","",2,N],[13,"EAGAIN","","",2,N],[13,"EINPROGRESS","","",2,N],[13,"EALREADY","","",2,N],[13,"ENOTSOCK","","",2,N],[13,"EDESTADDRREQ","","",2,N],[13,"EMSGSIZE","","",2,N],[13,"EPROTOTYPE","","",2,N],[13,"ENOPROTOOPT","","",2,N],[13,"EPROTONOSUPPORT","","",2,N],[13,"ESOCKTNOSUPPORT","","",2,N],[13,"ENOTSUP","","",2,N],[13,"EPFNOSUPPORT","","",2,N],[13,"EAFNOSUPPORT","","",2,N],[13,"EADDRINUSE","","",2,N],[13,"EADDRNOTAVAIL","","",2,N],[13,"ENETDOWN","","",2,N],[13,"ENETUNREACH","","",2,N],[13,"ENETRESET","","",2,N],[13,"ECONNABORTED","","",2,N],[13,"ECONNRESET","","",2,N],[13,"ENOBUFS","","",2,N],[13,"EISCONN","","",2,N],[13,"ENOTCONN","","",2,N],[13,"ESHUTDOWN","","",2,N],[13,"ETOOMANYREFS","","",2,N],[13,"ETIMEDOUT","","",2,N],[13,"ECONNREFUSED","","",2,N],[13,"ELOOP","","",2,N],[13,"ENAMETOOLONG","","",2,N],[13,"EHOSTDOWN","","",2,N],[13,"EHOSTUNREACH","","",2,N],[13,"ENOTEMPTY","","",2,N],[13,"EPROCLIM","","",2,N],[13,"EUSERS","","",2,N],[13,"EDQUOT","","",2,N],[13,"ESTALE","","",2,N],[13,"EREMOTE","","",2,N],[13,"EBADRPC","","",2,N],[13,"ERPCMISMATCH","","",2,N],[13,"EPROGUNAVAIL","","",2,N],[13,"EPROGMISMATCH","","",2,N],[13,"EPROCUNAVAIL","","",2,N],[13,"ENOLCK","","",2,N],[13,"ENOSYS","","",2,N],[13,"EFTYPE","","",2,N],[13,"EAUTH","","",2,N],[13,"ENEEDAUTH","","",2,N],[13,"EIDRM","","",2,N],[13,"ENOMSG","","",2,N],[13,"EOVERFLOW","","",2,N],[13,"ECANCELED","","",2,N],[13,"EILSEQ","","",2,N],[13,"ENOATTR","","",2,N],[13,"EDOOFUS","","",2,N],[13,"EBADMSG","","",2,N],[13,"EMULTIHOP","","",2,N],[13,"ENOLINK","","",2,N],[13,"EPROTO","","",2,N],[13,"ENOTCAPABLE","","",2,N],[13,"ECAPMODE","","",2,N],[13,"ENOTRECOVERABLE","","",2,N],[13,"EOWNERDEAD","","",2,N],[3,"AioCb","","",N,N],[3,"LioCb","","",N,N],[4,"BufRef","","Stores a reference to the buffer used by the `AioCb`, if any.",N,N],[13,"None","","Either the `AioCb` has no buffer, as for an fsync operation, or a reference can't be stored, as when constructed from a slice",3,N],[13,"BoxedSlice","","Immutable generic boxed slice",3,N],[13,"BoxedMutSlice","","Mutable generic boxed slice",3,N],[4,"LioError","","Error types that can be returned by `LioCb::submit`",N,N],[13,"EAGAIN","","No operations were enqueued.  No notification will be forthcoming.",4,N],[13,"EINCOMPLETE","","Some operations were enqueued, but not all.  Notification will be delievered when the enqueued operations are all complete.",4,N],[13,"EIO","","Some operations failed.  The value is a vector of the status of each operation.",4,N],[11,"boxed_slice","","Return the inner `BoxedSlice`, if any",3,[[["self"]],["option",["borrow"]]]],[11,"boxed_mut_slice","","Return the inner `BoxedMutSlice`, if any",3,[[["self"]],["option",["borrowmut"]]]],[11,"is_none","","Is this `BufRef` `None`?",3,[[["self"]],["bool"]]],[11,"len","","Length of the buffer, if any",3,[[["self"]],["option",["usize"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"from_fd","","Wraps nix::sys::aio::AioCb::from_fd.",5,[[["rawfd"],["c_int"]],["aiocb"]]],[11,"from_boxed_slice","","Creates a nix::sys::aio::AioCb from almost any kind of boxed slice",5,[[["rawfd"],["u64"],["box",["borrow"]],["c_int"],["lioopcode"]],["aiocb"]]],[11,"from_boxed_mut_slice","","Creates a nix::sys::aio::AioCb from almost any kind of mutable boxed slice",5,[[["rawfd"],["u64"],["box",["borrowmut"]],["c_int"],["lioopcode"]],["aiocb"]]],[11,"from_mut_slice","","Wraps nix::sys::aio::from_mut_slice",5,N],[11,"from_slice","","Wraps nix::sys::aio::from_slice",5,N],[11,"buf_ref","","return an `AioCb`'s inner `BufRef`",5,[[["self"]],["bufref"]]],[11,"aio_return","","Wrapper for nix::sys::aio::aio_return",5,[[["self"]],["result",["isize"]]]],[11,"cancel","","Wrapper for nix::sys::aio::AioCb::cancel",5,[[["self"]],["result",["aiocancelstat"]]]],[11,"error","","Wrapper for `nix::sys::aio::AioCb::error`",5,[[["self"]],["result"]]],[11,"fsync","","Wrapper for nix::sys::aio::AioCb::fsync",5,[[["self"],["aiofsyncmode"]],["result"]]],[11,"read","","Wrapper for nix::sys::aio::AioCb::read",5,[[["self"]],["result"]]],[11,"write","","Wrapper for nix::sys::aio::AioCb::write",5,[[["self"]],["result"]]],[11,"register","","",5,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",5,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",5,[[["self"],["poll"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"submit","","Submit an `LioCb` to the `aio(4)` subsystem.",6,[[["self"]],["result",["lioerror"]]]],[11,"resubmit","","Resubmit an `LioCb` if it is incomplete.",6,[[["self"]],["result",["lioerror"]]]],[11,"emplace_boxed_slice","","",6,[[["self"],["rawfd"],["u64"],["box",["borrow"]],["i32"],["lioopcode"]]]],[11,"emplace_boxed_mut_slice","","",6,[[["self"],["rawfd"],["u64"],["box",["borrowmut"]],["i32"],["lioopcode"]]]],[11,"emplace_slice","","",6,N],[11,"into_results","","Consume an `LioCb` and collect its operations' results.",6,[[["self"],["f"]],["r"]]],[11,"with_capacity","","",6,[[["usize"]],["liocb"]]],[11,"register","","",6,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",6,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",6,[[["self"],["poll"]],["result"]]],[11,"clone","","",4,[[["self"]],["lioerror"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"eq","","",4,[[["self"],["lioerror"]],["bool"]]],[11,"ne","","",4,[[["self"],["lioerror"]],["bool"]]],[11,"into_eio","","",4,[[["self"]],["result",["vec"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"partial_cmp","","",0,[[["self"],["aiofsyncmode"]],["option",["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["lioopcode"]],["option",["ordering"]]]],[11,"cmp","","",0,[[["self"],["aiofsyncmode"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["lioopcode"]],["ordering"]]],[11,"eq","","",0,[[["self"],["aiofsyncmode"]],["bool"]]],[11,"eq","","",2,[[["self"],["errno"]],["bool"]]],[11,"eq","","",1,[[["self"],["lioopcode"]],["bool"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"clone","","",1,[[["self"]],["lioopcode"]]],[11,"clone","","",2,[[["self"]],["errno"]]],[11,"clone","","",0,[[["self"]],["aiofsyncmode"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"last","","",2,[[],["errno"]]],[11,"desc","","",2,[[["self"]],["str"]]],[11,"from_i32","","",2,[[["i32"]],["errno"]]],[11,"clear","","",2,N],[11,"result","","Returns `Ok(value)` if it does not contain the sentinel value. This should not be used when `-1` is not the errno sentinel value.",2,[[["s"]],["result",["error"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]]],"paths":[[4,"AioFsyncMode"],[4,"LioOpcode"],[4,"Errno"],[4,"BufRef"],[4,"LioError"],[3,"AioCb"],[3,"LioCb"]]};
initSearch(searchIndex);
