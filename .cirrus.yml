freebsd_instance:
  image: freebsd-13-5-release-amd64

task:
  env:
    HOME: /tmp  # cargo cache needs it
    # Temporary workaround for https://github.com/rust-lang/rustup/issues/2774
    RUSTUP_IO_THREADS: 1
  matrix:
    - name: FreeBSD 13 amd64 nightly
      env:
        VERSION: nightly
    - name: FreeBSD 13 amd64 MSRV
      env:
        VERSION: 1.70.0
  # Install Rust
  setup_script:
    - fetch https://sh.rustup.rs -o rustup.sh
    - sh rustup.sh -y --default-toolchain $VERSION
    # aio on ufs is considered unsafe
    - sysctl vfs.aio.enable_unsafe=1
  cargo_cache:
    folder: $HOME/.cargo/registry
    fingerprint_script: cat Cargo.lock || echo ""
  test_script:
    - . $HOME/.cargo/env
    - cargo +$VERSION test
  clippy_script:
    - . $HOME/.cargo/env
    - if [ "$VERSION" = "nightly" ]; then cargo +$VERSION clippy --all-targets -- -D warnings; else true; fi
  audit_script:
    - . $HOME/.cargo/env
    # install ca_root_nss due to https://github.com/rustsec/rustsec/issues/11
    - pkg install -y ca_root_nss cargo-audit
    - cargo audit
  # Test our minimal version spec.
  minver_test_script:
    - . $HOME/.cargo/env
    - if [ "$VERSION" = "nightly" ]; then cargo +$VERSION update -Zdirect-minimal-versions; else true; fi
    - if [ "$VERSION" = "nightly" ]; then cargo +$VERSION check --all-targets; else true; fi
  fmt_script:
    - . $HOME/.cargo/env
    - if [ "$VERSION" = "nightly" ]; then cargo +$VERSION fmt -- --check; fi
  before_cache_script: rm -rf $HOME/.cargo/registry/index
